<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Impinj.OctaneSdk</name>
    </assembly>
    <members>
        <member name="T:Impinj.OctaneSdk.XArrayMode">
            <summary>
            Enum for defining the xArray operational mode.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.XArrayMode.WideAreaMonitor">
            <summary>
            Wide Area Monitor mode. xArray will perform a tag inventory on all antennas. 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.XArrayMode.Transition">
            <summary>
            Transition mode. xArray will report when tags transition for one zone to another.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.XArrayMode.Location">
            <summary>
            Location mode. xArray will report tag location.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.XArrayConfig">
            <summary>
            Class used to define the configuration for an xArray.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.XArrayConfig.Mode">
            <summary>
            Contains the xArray placement configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.XArrayConfig.Placement">
            <summary>
            Contains the xArray placement configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.XArrayConfig.Location">
            <summary>
            Contains the xArray location configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.XArrayConfig.Transition">
            <summary>
            Contains the xArray transition configuration.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagLockState">
            <summary>
            Enum for determining which lock operation to perform on the tag memory bank;
            this determines what state to leave the tag memory bank in.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagLockState.Lock">
            <summary>
            Leave the tag memory bank in the 'Lock' state;
            the tag memory bank can subsequently be unlocked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagLockState.Permalock">
            <summary>
            Leave the tag memory bank in the 'Permalock' state;
            the tag memory bank can never subsequently be unlocked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagLockState.Permaunlock">
            <summary>
            Leave the tag memory bank in the 'Permaunlock' state;
            the tag memory bank can never subsequently be locked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagLockState.Unlock">
            <summary>
            Leave the tag memory bank in the 'Unlock' state;
            the tag memory bank can subsequently be locked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagLockState.None">
            <summary>
            Do not change the lock state of the tag memory bank.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockMemoryBank">
            <summary>
            Enum for defining the tag memory bank to perform lock operation on.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockMemoryBank.KillPassword">
            <summary>
            Perform a lock operation on the Kill password memory region in
            the reserved memory bank.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockMemoryBank.AccessPassword">
            <summary>
            Perform a lock operation on the Access password memory region in
            the reserved memory bank.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockMemoryBank.Epc">
            <summary>
            Perform a lock operation on the EPC memory bank.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockMemoryBank.Tid">
            <summary>
            Perform a lock operation on the TID memory bank.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockMemoryBank.User">
            <summary>
            Perform a lock operation on the User memory bank.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagLockOp">
            <summary>
             Class used to specify a tag lock operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagOp">
            <summary>
            Parent class for tag operation definitions
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagOp.#ctor">
            <summary>
            Constructor; automatically assigns a unique ID number.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOp.Id">
            <summary>
            The tag operation unique identifier.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagLockOp.#ctor">
            <summary>
            Constructor for TagLockOp class
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.AccessPassword">
            <summary>
            Tag access password.  Required only if an access password has been set
            for the target memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.KillPasswordLockType">
            <summary>
            Lock operation to perform on the Kill Password.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.AccessPasswordLockType">
            <summary>
            Lock operation to perform on the Access Password.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.EpcLockType">
            <summary>
            Lock operation to perform on the EPC memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.TidLockType">
            <summary>
            Lock operation to perform on the TID memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.UserLockType">
            <summary>
            Lock operation to perform on the User memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagLockOp.LockCount">
            <summary>
            The number of locks specified in this operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadKillPasswordParams">
            <summary>
            Specialization of the <see cref="T:Impinj.OctaneSdk.ReadTagMemoryParams"/> class used to carry the
            configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ReadKillPassword(Impinj.OctaneSdk.ReadKillPasswordParams)"/>
            operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadTagMemoryParams">
            <summary>
            Parent class that is specialized to define the configuration for specific
            tag read operations.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTagMemoryParams.#ctor">
            <summary>
             Creates a new instance of the ReadTagMemoryParams class that
            initializes all member variables to their default values.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryParams.AccessPassword">
            <summary>
             The access password to use during the read operation. This should be specified as a hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryParams.AntennaPortNumber">
            <summary>
            The antenna port to use for the read operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryParams.RetryCount">
            <summary>
            The number of times to retry the write operation if a failure occurs.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryParams.TargetTag">
            <summary>
            The EPC of the tag to read. This should be specified as a hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryParams.TimeoutInMs">
            <summary>
            The amount of time (in milliseconds) to wait for the read operation to complete.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadKillPasswordParams.#ctor">
            <summary>
            Creates a new instance of the ReadKillPasswordParams class.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramTagMemoryParams">
            <summary>
            Parent class that is specialized to define the configuration for specific
            tag programming operations.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramTagMemoryParams.#ctor">
            <summary>
            Creates a new instance of the ProgramTagMemoryParams class that
            initializes all member variables to their default values.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.AccessPassword">
            <summary>
             The access password to use during the write operation. This should be specified as a hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.AntennaPortNumber">
            <summary>
            The antenna port to use for the write operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.BlockWriteWordCount">
            <summary>
            The number of words to write per block. The chip must support bock writes.
            The reader is limited to 32-bit (2 word) block writes.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.IsBlockWriteUsed">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.IsWriteVerified">
            <summary>
            Specifies whether or not to verify the write, by performing a separate read operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.LockType">
            <summary>
            The lock type to perform. 
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.RetryCount">
            <summary>
            The number of times to retry the write operation if a failure occurs.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.TargetTag">
            <summary>
            The EPC of the tag to write to. This should be specified as a hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryParams.TimeoutInMs">
            <summary>
            The amount of time (in milliseconds) to wait for the write operation to complete.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.KillTagParams">
            <summary>
            Class used to carry the configuration for the 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.KillTag(Impinj.OctaneSdk.KillTagParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.KillTagParams.#ctor">
            <summary>
            Initializes a new instance of the KillTagParams class.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.KillTagParams.KillPassword">
            <summary>
            Hexadecimal string representing the kill password of the tag. The 
            kill password is a 32-bit number so this string may be up to 8
            hexadecimal characters in length.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderStoppedEvent">
            <summary>
            Class used to encapsulate the details of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.ReaderStopped"/> reader event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LocationConfig">
            <summary>
            Class used to define the location configuration for an xArray.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.MotionWindowSeconds">
            <summary>
            Contains the the smoothing window for averaging the location estimates. Default is 10 seconds.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.TagAgeIntervalSeconds">
            <summary>
            Specifies how long a tag needs to go unseen before its removed from the location tracking. Default is 20 seconds.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.ReportIntervalSeconds">
            <summary>
            The period between location reports, in seconds.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.UpdateReportEnabled">
            <summary>
            Enables or disables the location update report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.EntryReportEnabled">
            <summary>
            Enables or disables the location entry report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.ExitReportEnabled">
            <summary>
            Enables or disables the location exit report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfig.DiagnosticReportEnabled">
            <summary>
            Enables or disables the diagnostic report.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaConfigGroup">
            <summary>
            Container class encapsulating all of the antenna configuration objects.
            This is for internal use only, and does not appear in the generated
            documentation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.Add(System.Object)">
            <summary>
            Adds the provided antenna configuration object to the collection.
            For internal library use only.
            </summary>
            <param name="config">The AntennaConfig object to add.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.EnableAll">
            <summary>
            Enable all antennas in the collection.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.DisableAll">
            <summary>
            Disable all antennas in the collection.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.EnableById(System.UInt16[])">
            <summary>
            Enable antennas by providing a list of antenna IDs.
            </summary>
            <param name="ids">A list of antenna IDs to enable.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.DisableById(System.UInt16[])">
            <summary>
            Disable antennas by providing a list of antenna IDs.
            </summary>
            <param name="ids">A list of antenna IDs to disable.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.EnableBySector(System.UInt16[])">
            <summary>
            Enable antennas by providing a list of xArray sector numbers.
            </summary>
            <param name="sectors">A list of xArray sectors to enable.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.DisableBySector(System.UInt16[])">
            <summary>
            Disable antennas by providing a list of xArray sector numbers.
            </summary>
            <param name="sectors">A list of xArray sectors to disable.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.EnableByRing(System.UInt16[])">
            <summary>
            Enable antennas by providing a list of xArray ring numbers.
            </summary>
            <param name="rings">A list of xArray rings to enable.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.DisableByRing(System.UInt16[])">
            <summary>
            Disable antennas by providing a list of xArray ring numbers.
            </summary>
            <param name="rings">A list of xArray rings to disable.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.GetAntenna(System.UInt16)">
            <summary>
            Returns the settings for the specified antenna port.
            </summary>
            <returns>
            The antenna settings or throws an exception if the port does not exist.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfigGroup.GetEnumerator">
            <summary>
            Get a handle to the the IEnumerator interface of the antenna
            configuration collection.
            </summary>
            <returns>
            An IEnumerator interface object to the antenna configuration
            collection.</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfigGroup.Item(System.Int32)">
            <summary></summary>
            <param name="index"/>
            <returns/>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfigGroup.TxPowerInDbm">
            <summary>
            Sets or gets the transmit power for all antennas
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfigGroup.RxSensitivityInDbm">
            <summary>
            Sets or gets the receive sensitivity for all antennas
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfigGroup.TxPowerMax">
            <summary>
            Specifies that the maximum antenna transmit power should be used.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfigGroup.RxSensitivityMax">
            <summary>
            Specifies that the maximum antenna receive sensitivity should be used.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfigGroup.Length">
            <summary>
            The number of antennas in the collection.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.WriteResultStatus">
            <summary>
            Enum defining the possible status outcomes for the tag write operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.Success">
            <summary>
            The tag write operation was successful.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.TagMemoryOverrunError">
            <summary>
            The tag write operation request contained more data than can fit in 
            the target memory bank.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.TagMemoryLockedError">
            <summary>
            The target memory bank is in the locked state.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.InsufficientPower">
            <summary>
            The tag did not meet the required RSSI threshold.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.NonspecificTagError">
            <summary>
            An unidentified tag error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.NoResponseFromTag">
            <summary>
            No ACK response was received from the tag in response to the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WriteResultStatus.NonspecificReaderError">
            <summary>
            An unidentified reader error occurred.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagWriteOpResult">
            <summary>
            Specialization of <see cref="T:Impinj.OctaneSdk.TagOpResult"/> class that contains the
            results of an individual tag write operation, as reported in the
            <see cref="T:Impinj.OctaneSdk.TagOpReport"/> parameter of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/> event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagOpResult">
            <summary>
            Parent class that contains the results of an individual tag operation,
            as reported in the TagOpReport parameter of the
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/>
            event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpResult.Tag">
            <summary>
            Details of the individual tag on which the operation was performed
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpResult.OpId">
            <summary>
            The identifier of the tag operation that produced these results.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpResult.SequenceId">
            <summary>
            The identifier of the tag operation sequence that contains this
            operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWriteOpResult.NumWordsWritten">
            <summary>
            The number of 16-bit words written by the tag write operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWriteOpResult.Result">
            <summary>
            The result of the tag write operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWriteOpResult.IsBlockWrite">
            <summary>
            Indicates whether the tag write was a standard or BlockWrite
            operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpsCoordinates">
            <summary>
            Helper class used to manage GPS coordinates within a tag object.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpsCoordinates.ToString">
            <summary>
            Override of the ToString operator that concatenates the
            Latitude and Longitude parameters into a single string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Impinj.OctaneSdk.GpsCoordinates.Latitude">
            <summary>
            Parameter for storing Latitude data.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpsCoordinates.Longitude">
            <summary>
            Parameter for storing Longitude data.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockResultStatus">
            <summary>
            Enum defining the possible status outcomes for the tag lock operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockResultStatus.Success">
            <summary>
            The tag lock operation completed successfully.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockResultStatus.InsufficientPower">
            <summary>
            The tag did not meet the required RSSI threshold.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockResultStatus.NonspecificTagError">
            <summary>
            An unidentified tag error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockResultStatus.NoResponseFromTag">
            <summary>
            No ACK response was received from the tag in response to the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockResultStatus.NonspecificReaderError">
            <summary>
            An unidentified reader error occurred.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagLockOpResult">
            <summary>
            Specialization of <see cref="T:Impinj.OctaneSdk.TagOpResult"/> class that contains the
            results of an individual tag lock operation, as reported in the
            <see cref="T:Impinj.OctaneSdk.TagOpReport"/> parameter of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/> event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagLockOpResult.Result">
            <summary>
            The results of the tag lock operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderMode">
            <summary>
            Enum defining the configured Reader mode, which controls the modulation
            and data rate for the the link between the reader and the tags.
            AutoSetDenseReader is recommended as the most robust mode. Not all modes
            are available on all models and regions.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.MaxThroughput">
            <summary>
            Fastest possible data transfer rates between tag and reader when
            the population of readers is very low and the likelihood of
            interference between readers is very low.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.Hybrid">
            <summary>
            Provides a fast read rate when there are is modest interference from
            other readers, but a low likelihood of co-channel, adjacent channel,
            or alternate-channel interferers.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.DenseReaderM4">
            <summary>
            Provides an intermediate read rate when the population of readers is
            large and the likelihood of interference is high.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.DenseReaderM8">
            <summary>
            Provides a low read rate (~half that of DenseReaderM4) for extreme
            interference environments where tags are stationary or moving slowly.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.MaxMiller">
            <summary>
            Provides maximum reliability and read rate when the population of
            readers is low and the Likelihood of interference is low.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.AutoSetDenseReader">
            <summary>
            The reader monitors RF noise and interference and then automatically
            and continuously optimizes the reader’s configuration, selecting the
            appropriate configuration settings for the best, most reliable
            performance.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReaderMode.AutoSetSingleReader">
            <summary>
            Same as AutoSetDenseReader; The Reader chooses the best forward
            link parameters for the environment.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SearchMode">
            <summary>
            Enum for configuring the tag search mode, which controls whether tags
            are singulated only once, or repeatedly.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.ReaderSelected">
            <summary>
            Reader automatically selects a tag search mode.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.SingleTarget">
            <summary>
            Reader inventories tags that are in the session inventory state A only,
            inverting the inventory flag to state B for the appropriate session
            interval so that they no longer respond to reader queries; useful when
            there is a high tag count, or for a high-throughput application, where
            a reduction in repeated tag observation is acceptable.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.DualTarget">
            <summary>
            Reader inventories tags in session inventory state A first, 
            inverting their inventory flag to state B.  Once all of the tags in
            state A have responded, the reader then inventories tags in state B.
            This process continues for as long as the tags stay in the antenna
            field of view.  This is useful when there is a low to medium tag
            count or for low-throughput applications where repeated tag observation
            is desirable.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.TagFocus">
            <summary>
            For Monza tags and Session 1 ONLY; reader inventories tags and then
            uses the Monza TagFocus feature to suppress repeated observations
            for extended periods of time while tags are energized. This is
            useful for high-throughput applications where a single observation
            of each tag is acceptable.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SearchMode.SingleTargetWithSuppression">
            <summary/>
        </member>
        <member name="T:Impinj.OctaneSdk.Settings">
            <summary>
            Class for containing all the settings necessary for a reader to begin
            singulating. It is a composite class consisting of other composite
            classes containing individual settings, and is consumed by the
            following methods:
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ApplySettings(Impinj.OctaneSdk.Settings)"/>, 
            and produced by the following methods:
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.QuerySettings"/>,  
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.QueryDefaultSettings"/>, 
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjSerializableClass">
            <summary>
            Parent class that enables child classes to output contents in XML format.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjSerializableClass.ToXmlString">
            <summary>
            Output the class contents as an XML string.
            </summary>
            <returns>The class contents in XML string format.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjSerializableClass.Save(System.String)">
            <summary>
            Output the class contents as an XML file.
            </summary>
            <param name="path">path and filename of the XML file.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.FromXmlString(System.String)">
            <summary>
            Method for importing reader configuration settings from an XML string.
            </summary>
            <param name="xml">XML string to parse.</param>
            <returns>Populated Settings object.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.Settings.Load(System.String)">
            <summary>
            Read the XML representation of settings from a file and return a 
            new Settings instance with those values.
            </summary>
            <param name="path">The path and filename of the XML file to load.</param>
            <returns>Populated instance of Settings class based on file contents.</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.AutoStart">
            <summary>
            The conditions in which an Impinj reader will automatically start
            operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.AutoStop">
            <summary>
            The conditions in which an Impinj reader will automatically stop
            operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.ReaderMode">
            <summary>
            The selected reader mode for this configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.SearchMode">
            <summary>
            The selected tag search mode for this configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Session">
            <summary>
            Session number (0 - 3) to use for the inventory operation for this
            configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.TagPopulationEstimate">
            <summary>
            An estimate of the tag population in view of the RF field of the antenna.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.LowDutyCycle">
            <summary>
            The settings for the reader Low Duty Cycle feature, which optionally
            reduces RF activity.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Filters">
            <summary>
            The settings for defining any tag filters that the reader must use to
            select a portion of the tag population to participate in singulation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Report">
            <summary>
            Set how tags are reported and select optional report fields.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Antennas">
            <summary>
            Per-antenna settings: power, sensitivity, etc. may be iterated with
            foreach or subscripted by antenna port number. 
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Gpis">
            <summary>
            Enable general purpose input (GPI) events on specific GPI ports.
            May be iterated with foreach or subscripted by GPI port number.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Gpos">
            <summary>
            Enable general purpose output (GPO) events on specific GPO ports.
            May be iterated with foreach or subscripted by GPO port number.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.Keepalives">
            <summary>
            Optionally cause the reader to send a keep-alive message periodically.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.HoldReportsOnDisconnect">
            <summary>
            Indicates whether the reader has been configured to hold reports
            and events; i.e. the reader events and reports parameter
            HoldEventsAndReportsUponReconnect is set to true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.TxFrequenciesInMhz">
            <summary>
            Transmit frequencies to use in regions that allow it. 
            An empty list means the reader chooses.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Settings.XArray">
            <summary>
            xArray configuration
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadTidMemoryParams">
            <summary>
            Specialization of the <see cref="T:Impinj.OctaneSdk.ReadTagMemoryParams"/> class used to carry the
            configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ReadTidMemory(Impinj.OctaneSdk.ReadTidMemoryParams)"/>
            operation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadTidMemoryParams.#ctor">
            <summary>
            Creates a new instance of the ReadTidMemoryParams class that
            initializes WordCount and WordPointer to 0.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTidMemoryParams.WordCount">
            <summary>
            The number of words to read.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTidMemoryParams.WordPointer">
            <summary>
            The word to start writing from.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserMemoryResult">
            <summary>
            Class for containing the results of a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramUserMemory(Impinj.OctaneSdk.ProgramUserMemoryParams)"/>
            operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramTagMemoryResult">
            <summary>
            Parent Class to carry the results of tag memory programming
            operations, including not just the results of the write operation, but
            also any lock or verify operations, if the program operation is
            configured to use them.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryResult.WriteResult">
            <summary>
            Member that contains the results of the tag write operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryResult.LockResult">
            <summary>
            Member that contains the results of the tag lock operation,
            if configured.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramTagMemoryResult.VerifyResult">
            <summary>
            Member that contains the results of a tag verify operation,
            if configured.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramEpcResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramEpc(Impinj.OctaneSdk.ProgramEpcParams)"/>
            operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PcBits">
            <summary>
            Helper class used to encode and decode the PC word.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.PcBits.AdjustPcBits(System.UInt16,System.UInt16)">
            <summary>
            Returns new PC bits, based on the current 
            PC bits and the new EPC length.
            </summary>
            <param name="currentPcBits"></param>
            <param name="newEpcLengthInWords"></param>
            <returns></returns>
        </member>
        <member name="M:Impinj.OctaneSdk.PcBits.EpcLengthInWords(System.UInt16)">
            <summary>
            Determines the current length of the EPC (in words) 
            based on the tag's PC bits.
            </summary>
            <param name="pcBits">The current PC bits of the tag.</param>
            <returns>The length of the EPC is 16-bit words.</returns>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaConfig">
            <summary>
            Class used to define the configuration settings for an
            individual antenna port.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaConfig.#ctor(System.UInt16)">
            <summary>
            Constructor for a new antenna configuration object.
            </summary>
            <param name="NewPortNumber">Antenna port to configure. A value of 0 means
            configuration is applied to all antennas.</param>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.IsEnabled">
            <summary>If set to true, the reader will try to inventory tags on that port</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.PortNumber">
            <summary>
            Specifies the antenna port number (starting at port 1) to configure.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when PortNumber is set to 0;
            </exception>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.PortName">
            <summary>A string that the user can name the antenna port. Example: Door Antenna</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.TxPowerInDbm">
            <summary>
            Defines the antenna transmit power in dBm (e.g. 24.0 dBm).
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.RxSensitivityInDbm">
            <summary>
            Defines the antenna receive sensitivity (AKA receive sensitivity filter)
            in dBm (e.g. -55 dBm).
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.MaxRxSensitivity">
            <summary>
            Specifies that the maximum antenna receive sensitivity setting 
            should be used.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaConfig.MaxTxPower">
            <summary>
            Specifies that the maximum antenna transmit power setting should
            be used.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagOpReport">
            <summary>
            Container class used to encapsulate all tag operation results,
            as reported in the <see cref="T:Impinj.OctaneSdk.TagOpReport"/> parameter of the
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/>
            event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpReport.Results">
            <summary>
            A list of detailed tag operation results; each must be cast to the
            appropriate tag operation result type to extract all of the contents.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagOpReport.GetEnumerator">
            <summary>
            Get access to the C# IEnumerator interface of the tag operation
            results list.
            </summary>
            <returns>
            The IEnumerator interface to the list of tag operation results.
            </returns>
        </member>
        <member name="T:Impinj.OctaneSdk.TagFilterOp">
            <summary></summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterOp.Match">
            <summary>
            Only select tags that match the filter.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterOp.NotMatch">
            <summary>
            Only select tags that do not match the filter.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagFilter">
            <summary>
            Class for containing the settings for a single inventory filter.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagFilter.#ctor">
            <summary>
            Initializes a new instance of the TagFilter class, initializing
            the memory bank to EPC.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.TagMask">
            <summary>
            The tag mask defines the bit pattern that the filter must match on.
            The mask should be expressed as a hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.BitPointer">
            <summary>
            The bit offset in the specified memory bank at which the tag mask
            begins. It is important to note that this is a bit offset and need
            not be word or even byte-aligned.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.BitCount">
            <summary>
            The length of the tag mask in bits.
            If no length is specified, the entire mask is used.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.MemoryBank">
            <summary>
            The memory bank on which the filter is applied. Filters may be
            configured to search for content in the Epc, Tid, and User memory
            banks. Filters may not match against the Reserved memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagFilter.FilterOp">
            <summary/>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadTagMemoryResult">
            <summary>
            Parent class used to carry the results of any tag read
            operations, including not just the results of the read operation, but
            also any lock or verify operations, if the program operation is
            configured to use them.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryResult.ReadResult">
            <summary>
            Member that contains the results of the tag read operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryResult.LockResult">
            <summary>
            Member that contains the results of the tag lock operation,
            if configured.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadTagMemoryResult.KillResult">
            <summary>
            Member that contains the results of a tag verify operation,
            if configured.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LogLevel">
            <summary>
            Obsolete enumeration. Do not use.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LogLevel.Debug">
            Obsolete. Do not use.
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserBlockParams">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserBlockResult">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SpeedwayReader">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagsReportedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiChangedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaChangedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportBufferWarnedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportBufferOverflowedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.StoppedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.StartedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectionChangedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.DisconnectedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectionLostEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectionAttemptedEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LoggingEventArgs">
            <summary>
            Obsolete class. Do not use.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockTagResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.LockTag(Impinj.OctaneSdk.LockTagParams)"/>
            operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagResult.LockResult">
            <summary>
            The result of the lock operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpoConfigGroup">
            <summary>
            Container class encapsulating all of the GPO configuration objects.
            This is for internal use only, and does not appear in the generated
            documentation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpoConfigGroup.Add(System.Object)">
            <summary>
            Adds the provided GPO configuration object to the collection.
            For internal library use only.
            </summary>
            <param name="config">The GpOConfig object to add.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.GpoConfigGroup.GetGpo(System.UInt16)">
            <summary>
            Returns the settings for the specified GPO port.
            </summary>
            <returns>The GPO settings or throws an exception if the port does not exist.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.GpoConfigGroup.GetEnumerator">
            <summary>
            Get a handle to the IEnumerator interface of the GPO configuration
            collection.
            </summary>
            <returns>
            An IEnumerator interface object to the GPO configuration
            collection.
            </returns>
        </member>
        <member name="P:Impinj.OctaneSdk.GpoConfigGroup.Item(System.Int32)">
            <summary/>
            <param name="index"/>
            <returns/>
        </member>
        <member name="P:Impinj.OctaneSdk.GpoConfigGroup.Length">
            <summary>
            The number of GPOs in the collection.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SequenceTriggerType">
            <summary>
            Enum used to identify the sequence stop trigger.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SequenceTriggerType.None">
            <summary>
            Indicates that there is no stop trigger; the sequence runs
            indefinitely.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SequenceTriggerType.ExecutionCount">
            <summary>
            Indicates that the sequence will run for the number of
            times specified in the ExecutionCount parameter.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SequenceState">
            <summary>
            Enum for defining the operation state for a sequence.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SequenceState.Disabled">
            <summary>
            Indicates that all sequence operations are disabled.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.SequenceState.Active">
            <summary>
            Indicates that all sequence operations are active.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagOpSequence">
            <summary>
            Class for containing and configuring a sequence of tag operations
            that are submitted to the reader using the
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.AddOpSequence(Impinj.OctaneSdk.TagOpSequence)"/> method.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagOpSequence.#ctor">
            <summary>
            Default constructor that applies defaults to all member variables.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.SequenceStopTrigger">
            <summary>
            Definition of trigger that will cause this operating sequence to stop.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.Id">
            <summary>
            The unique ID for this sequence. A unique ID is automatically assigned
            by the class constructor.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.AntennaId">
            <summary>
            The Antenna ID to which this sequence will be applied.
            Antennas start at antenna 1, and for all antennas, use AntennasIds.All.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.State">
            <summary>
            Identifies whether the sequence is disabled or active.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.ExecutionCount">
            <summary>
            When the SequenceStopTrigger member variable is set to ExecutionCount,
            this parameter identifies the number of times this sequence of
            operations will execute before it gets deleted.
            A value of zero (0) means that the sequence never gets deleted.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.TargetTag">
            <summary>
            Identifies the target tag(s) on which to perform this tag operation
            sequence.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.Ops">
            <summary>
            The list of tag operations to perform.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.BlockWriteEnabled">
            <summary>
            Flag whether BlockWrites should be used, or not.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.BlockWriteWordCount">
            <summary>
            Specify whether 16 or 32-bit BlockWrites should be used.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagOpSequence.BlockWriteRetryCount">
            <summary>
            Specify how many retries to use for BlockWrite operations.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RoSpecEventType">
            <summary>
            Enum identifying the type of ROSpec event that has occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RoSpecEventType.StartOfROSpec">
            <summary>
            This is an ROSpec start event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RoSpecEventType.EndOfROSpec">
            <summary>
            This is an end of ROSpec event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RoSpecEventType.PreemptionOfROSpec">
            <summary>
            ROSpec has been preempted by an ROSpec of a higher priority.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RoSpecEvent">
            <summary>
            Class encapsulating an ROSpec event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RoSpecEvent.Event">
            <summary>
            The ROSpec event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportBufferOverflowEvent">
            <summary>
            Class used to encapsulate the details of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.ReportBufferOverflow"/> reader event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiConfigGroup">
            <summary>
            Container class encapsulating all of the GPI configuration objects.
            This is for internal use only, and does not appear in the generated
            documentation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiConfigGroup.#ctor(System.UInt16)">
            <summary>
            Creates a new instance of the GpiConfigGroup class that is
            initialized with the specified number of GPI objects.
            </summary>
            <param name="numGpis">The number of GPI configuration objects to create.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiConfigGroup.Add(System.Object)">
            <summary>
            Adds the provided GPI configuration object to the collection.
            For internal library use only.
            </summary>
            <param name="config">The GpiConfig object to add.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiConfigGroup.EnableAll">
            <summary>
            Enable all GPIs in the collection.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiConfigGroup.DisableAll">
            <summary>
            Disable all GPIs in the collection.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiConfigGroup.GetGpi(System.UInt16)">
            <summary>
            Returns the settings for the specified GPI port.
            </summary>
            <returns>The GPI settings or throws an exception if the port does not exist.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiConfigGroup.GetEnumerator">
            <summary>
            Get a handle to the IEnumerator interface of the GPI configuration
            collection .
            </summary>
            <returns>
            An IEnumerator interface object to the GPI configuration
            collection.
            </returns>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiConfigGroup.Item(System.Int32)">
            <summary/>
            <param name="index"/>
            <returns/>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiConfigGroup.Length">
            <summary>
            The number of GPIs in the collection.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaStatusGroup">
            <summary>
            Container class encapsulating all of the antenna status objects.
            This is for internal use only, and does not appear in the generated
            documentation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaStatusGroup.GetAntenna(System.UInt16)">
            <summary>
            Returns the status for the specified antenna port.
            </summary>
            <returns>
            The antenna status or throws an exception if the port does not exist.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaStatusGroup.Add(System.Object)">
            <summary>
            Adds the provided antenna status object to the collection.
            For internal library use only.
            </summary>
            <param name="status">The AntennaStatus object to add.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaStatusGroup.GetEnumerator">
            <summary>
            Get a handle to the the IEnumerator interface of the antenna
            status collection.
            </summary>
            <returns>
            An IEnumerator interface object to the antenna status
            collection.</returns>
        </member>
        <member name="T:Impinj.OctaneSdk.QtSetConfigResultStatus">
            <summary>
            Enum defining the possible status outcomes for the tag QT operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtSetConfigResultStatus.Success">
            <summary>
            The tag QT operation was successful.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtSetConfigResultStatus.InsufficientPower">
            <summary>
            The tag did not meet the required RSSI threshold.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtSetConfigResultStatus.NonspecificTagError">
            <summary>
            An unidentified tag error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtSetConfigResultStatus.NoResponseFromTag">
            <summary>
            No ACK response was received from the tag in response to the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtSetConfigResultStatus.NonspecificReaderError">
            <summary>
            An unidentified reader error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtSetConfigResultStatus.IncorrectPasswordError">
            <summary>
            An incorrect QT password was used.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagQtSetOpResult">
            <summary>
            Contains the results of an individual Monza QT operation, as reported in the
            <see cref="T:Impinj.OctaneSdk.TagOpReport"/> parameter of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/> event.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtSetOpResult.Result">
            <summary>
            The result of the tag QT operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.Tag">
            <summary>
            Class used to contain the details for a specific tag.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.Epc">
            <summary>
            Contents of the tag EPC memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.AntennaPortNumber">
            <summary>
            The reader antenna port number for the antenna that last saw the tag;
            requires this option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.ChannelInMhz">
            <summary>
            The Reader channel, defined in Megahertz, that was being used when
            the tag was last seen; requires this option to be enabled in the
            reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.FirstSeenTime">
            <summary>
            The time that the reader first saw the tag; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.LastSeenTime">
            <summary>
            The time that the reader last saw the tag; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.PeakRssiInDbm">
            <summary>
            The maximum RSSI, in dBm, that was seen for this tag; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.TagSeenCount">
            <summary>
            The number of times the reader has seen this tag; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.Tid">
            <summary>
            The contents of the tag TID memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.RfDopplerFrequency">
            <summary>
            The value of the tag Doppler Frequency parameter; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.PhaseAngleInRadians">
            <summary>
            The value of the tag Phase Angle parameter; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.Crc">
            <summary>
            Contents of the CRC 16-bit word (word 0) in the tag EPC memory bank; requires this
            option to be enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.PcBits">
            <summary>
            Contents of the PC Bits 16-bit word (word 1) in the tag EPC memory
            bank; requires this option to be enabled in the reader settings
            report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.SerializedTid">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.GpsCoodinates">
            <summary>
            The value of the GPSCoordinates parameter, if this option
            is enabled in the reader settings report configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.ModelDetails">
            <summary>
            Tag model details such as 
            model name, EPC memory size and User memory size.
            This feature is only available with Impinj Monza 4 and newer tags.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.ReadOperationResults">
            <summary>
            Results of an Optimized Read operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsAntennaPortNumberPresent">
            <summary>
            Does the tag data include antenna port number data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsChannelInMhzPresent">
            <summary>
            Does the tag data include channel frequency data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsFirstSeenTimePresent">
            <summary>
            Does the tag data include the first seen timestamp data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsLastSeenTimePresent">
            <summary>
            Does the tag data include the last seen timestamp data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsPeakRssiInDbmPresent">
            <summary>
            Does the tag data include the peak RSSI data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsFastIdPresent">
            <summary>
            Does the tag data include the TID data from a FastId query?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsRfPhaseAnglePresent">
            <summary>
            Does the tag data include Phase Angle data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsSeenCountPresent">
            <summary>
            Does the tag data include data on the number of times the
            tag has been seen?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsCrcPresent">
            <summary>
            Does the tag data include the EPC CRC data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsPcBitsPresent">
            <summary>
            Does the tag data include the EPC PC Bits data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsRfDopplerFrequencyPresent">
            <summary>
            Does the tag data include Doppler Frequency data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsGpsCoordinatesPresent">
            <summary>
            Does the tag data include GPS Coordinate data?
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsPhaseAngleInRadiansPresent">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.Tag.IsSerializedTidPresent">
            <summary/>
        </member>
        <member name="T:Impinj.OctaneSdk.TagFilterMode">
            <summary>
            The possible inventory tag filter combinations.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.None">
            <summary>
            No inventory tag filter.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.OnlyFilter1">
            <summary>
            Filter only on conditions defined in Filter 1.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.OnlyFilter2">
            <summary>
            Filter only on conditions defined in Filter 2.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.Filter1AndFilter2">
            <summary>
            Filter on conditions defined in Filters 1 AND 2.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagFilterMode.Filter1OrFilter2">
            <summary>
            Filter on conditions defined in Filters 2 OR 2.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.FilterSettings">
            <summary>
            Class used to define inventory tag filter settings.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.FilterSettings.Mode">
            <summary>
            Inventory tag filter mode.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.FilterSettings.TagFilter1">
            <summary>
            Tag filter 1.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.FilterSettings.TagFilter2">
            <summary>
            Tag filter 2.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.DiagnosticReport">
            <summary>
            xArray diagnostic report
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.DiagnosticReport.Metrics">
            <summary>
            Diagnostic data. Internal use only.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaStatus">
            <summary>
            Class containing The status information for an individual antenna port.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.State">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.IsConnected">
            <summary>
            Indicates whether the antenna port is connected to an antenna.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.PortNumber">
            <summary>
            The antenna port number.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaStatus.IsEnabled">
            <summary/>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaHubStatusGroup">
            <summary>
            Container class encapsulating all of the antenna hub status objects.
            This is for internal use only, and does not appear in the generated
            documentation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaHubStatusGroup.GetAntennaHub(System.UInt16)">
            <summary>
            Returns the settings for the specified antenna hub.
            </summary>
            <returns>The antenna hub status or throws an exception if the hub does not exist.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaHubStatusGroup.Add(System.Object)">
            <summary>
            Adds the provided antenna hub status object to the collection.
            For internal library use only.
            </summary>
            <param name="status">The antenna hub status object to add.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.AntennaHubStatusGroup.GetEnumerator">
            <summary>
            Get a handle to the IEnumerator interface of the antenna hub status
            collection.
            </summary>
            <returns>
            An IEnumerator interface object to the antenna hub status
            collection.
            </returns>
        </member>
        <member name="T:Impinj.OctaneSdk.TagQtGetOp">
            <summary>
            Used to retrieve the current QT status of a tag.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtGetOp.AccessPassword">
            <summary>
            Tag access password. Required only if the  
            tag's access password has been set.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagKillOp">
            <summary>
             Class used to specify a tag kill operation.
             WARNING:- once killed, a tag will permanently cease functioning.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagKillOp.KillPassword">
            <summary>
            Value of the kill password; this MUST match the kill password
            already written to the reserved memory bank, or the operation
            will fail.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AccessResult">
            <summary></summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AccessResult.foo">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramEpcParams">
            <summary>
            Specialization of the <see cref="T:Impinj.OctaneSdk.ProgramTagMemoryParams"/> class used to
            carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramEpc(Impinj.OctaneSdk.ProgramEpcParams)"/>
            operation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramEpcParams.#ctor">
            <summary>
            Creates a new instance of the ProgramEpcParams class that
            initializes NewEpc to "".
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramEpcParams.NewEpc">
            <summary>
            The EPC to write to the tag. This should be specified as a hex string.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.BlockPermalockResult">
            <summary>
            An enumerations used to indicate the results of 
            a block permalock operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.Success">
            <summary>
            The operation was successful.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.Insufficient_Power">
            <summary>
            There was insufficient power to perform the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.NonspecificTagError">
            <summary>
            The operation failed for an unknown reason.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.NoResponseFromTag">
            <summary>
            The operation failed because the reader did not receive a response from the tag.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.NonspecificReaderError">
            <summary>
            The operation failed for an unknown reason.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.IncorrectPasswordError">
            <summary>
            The operation failed because an incorrect password was supplied.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BlockPermalockResult.TagMemoryOverrunError">
            <summary>
            The operation failed because it attempted to access memory outside of the valid range.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagBlockPermalockOpResult">
            <summary>
            Contains the results of a block permalock operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagBlockPermalockOpResult.Result">
            <summary>
            The results of the block permalock operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStopMode">
            <summary>
            Enum defining the possible Impinj reader autostop modes.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopMode.None">
            <summary>
            No autostop mode specified.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopMode.Duration">
            <summary>
            Autostop defined by a timeout.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopMode.GpiTrigger">
            <summary>
            Autostop defined by a GPI trigger value.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStopConfig">
            <summary>
            Class for defining the trigger conditions that will prompt an Impinj
            reader to automatically stop its current operation. Even when an
            auto-stop trigger is set, the Reader may be explicitly stopped using
            the <see cref="M:Impinj.OctaneSdk.ImpinjReader.Stop"/> method.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopConfig.Mode">
            <summary>
            Indicates whether and how the Reader should automatically stop;
            either None, Duration or GpiTrigger.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopConfig.DurationInMs">
            <summary>
            When using Duration mode, this is period for which the Reader
            singulates.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopConfig.GpiPortNumber">
            <summary>
            GPI port to monitor for a stop event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopConfig.GpiLevel">
            <summary>
            When using GpiTrigger mode, and when the GPI Port changes to this
            level, then the reader stops. True for high, false for low.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStopConfig.Timeout">
            <summary>
            This is the longest the Reader will singulate even if the GPI does
            not change. A value of 0 means there is no time limit. 
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagReport">
            <summary>
            Container class used to encapsulate individual tag details returned
            from the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReport.Tags">
            <summary>
            A list of tag details.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagReport.GetEnumerator">
            <summary>
            Get access to the C# IEnumerator interface of the tag reports
            list.
            </summary>
            <returns>
            The IEnumerator interface to the list of tag reports.
            </returns>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramUserMemoryParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramUserMemory(Impinj.OctaneSdk.ProgramUserMemoryParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramUserMemoryParams.#ctor">
            <summary>
            Initializes a new instance of the ProgramUserMemoryParams class,
            setting NewUserBlock to "" and WordPointer to 0.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.NewUserBlock">
            <summary>
            A hexadecimal string representing the data to program.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramUserMemoryParams.WordPointer">
            <summary>
            The word to start writing from.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramAccessPasswordResult">
            <summary>
            Class that contains the result of a 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramAccessPassword(Impinj.OctaneSdk.ProgramAccessPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockType">
            <summary>
            Enum specifying the type of lock operation to perform.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.None">
            <summary>
            Perform no lock operation on the tag memory bank;
            the tag memory bank lock status remains unaffected.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.Unlocked">
            <summary>
            Perform an 'Unlock' operation on the tag memory bank;
            the tag memory bank can never subsequently be unlocked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.Locked">
            <summary>
            Perform a 'Lock' operation on the tag memory bank;
            the tag memory bank can subsequently be unlocked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.PermaUnlocked">
            <summary>
            Perform a 'Permaunlock' operation on the tag memory bank;
            the tag memory bank can never subsequently be locked.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LockType.PermaLocked">
            <summary>
            Perform a 'Permalock' operation on the tag memory bank;
            the tag memory bank can never subsequently be unlocked.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LockTagParams">
            <summary>
            Class to carry the configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.LockTag(Impinj.OctaneSdk.LockTagParams)"/>
            operation, which is flagged for obsolescence.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.LockTagParams.#ctor">
            <summary>
            Default constructor; initializes LockUserMemory to LockType.None.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LockTagParams.LockUserMemory">
            <summary>
             The type of lock operation to perform.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ConnectAsyncResult">
            <summary>
            Enumeration used to specify the result of an asynchronous connection attempt
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ConnectAsyncResult.Success">
            <summary>
            Successfully connected to the reader
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ConnectAsyncResult.Failure">
            <summary>
            Failed to connect to the reader
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader">
            <summary>
            The main class for controlling and configuring an Impinj RFID reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.#ctor(System.String,System.String)">
            <summary>
            Creates and initializes an ImpinjReader object.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.#ctor">
            <summary>
            Creates and initializes an ImpinjReader object.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Finalize">
            <summary>
            Destroys an ImpinjReader object and frees resources.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Disconnect">
            <summary>
            Closes the connection to the reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Stop">
            <summary>
            Stops the reader. Tags will no longer be read.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Start">
            <summary>
            Starts the reader. Tag reports will be received asynchronously via an event. 
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown if the Start method is called before connecting to a reader.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ConnectAsync">
            <summary>
            Connect to an %Impinj RFID reader asynchronously. 
            An event will be raised when the connection attempt succeeds or fails.
            The Address property must be set prior to calling this method.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the connection attempt fails or if the Address
            property has not been set.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ConnectAsync(System.String)">
            <summary>
            Connect to an %Impinj RFID reader asynchronously. 
            An event will be raised when the connection attempt succeeds or fails.
            </summary>
            <param name="address">IP address or hostname of the target reader.</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the connection attempt fails. 
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ConnectAsync(System.String,System.Int32)">
            <summary>
            Connect to an %Impinj RFID reader asynchronously. 
            An event will be raised when the connection attempt succeeds or fails.
            </summary>
            <param name="address">IP address or hostname of the target reader.</param>
            <param name="port">TCP/IP port number used by the target reader.</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the connection attempt fails.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Connect">
            <summary>
            Connect to an %Impinj RFID reader. 
            The Address property must be set prior to calling this method.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the connection attempt fails or if the Address
            property has not been set.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Connect(System.String)">
            <summary>
            Connect to an %Impinj RFID reader.
            </summary>
            <param name="address">IP address or hostname of the target reader.</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the connection attempt fails. 
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.Connect(System.String,System.Int32)">
            <summary>
            Connect to an %Impinj RFID reader.
            </summary>
            <param name="address">IP address or hostname of the target reader.</param>
            <param name="port">TCP/IP port number used by the target reader.</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the connection attempt fails.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ApplySettings(Impinj.OctaneSdk.Settings)">
            <summary>
            Applies the provided settings to the reader.
            </summary>
            <param name="settings">Settings to apply to the reader</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when this method is called prior to establishing a 
            connection with a reader, or if the settings are invalid.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QueryFactorySettings">
            <summary>
            Obsolete method. Do not use.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ApplyFactorySettings">
            <summary>
            Obsolete method. Do not use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QueryDefaultSettings">
            <summary>
            Returns the reader default settings.
            </summary>
            <returns>The default settings of the reader.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when this method is called prior to establishing a connection with a reader.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ApplyDefaultSettings">
            <summary>
            Applies the default settings to the reader.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown if this method is called
            prior to establishing a connection with a reader.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.SaveSettings">
            <summary>
            Instructs the Reader to save the current configuration to persistent
            storage. The saved parameters then become the Reader's power-on and
            reset settings.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QueryTags(System.Double)">
            Don't include these classes in the documentation
            \cond
            <summary/>
            <param name="seconds"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QueryTags">
            <summary>
            Tells the reader to send all the tag reports it has buffered.
            The ReportMode should be set so that reader accumulates tag reads
            (WaitForQuery or BatchAfterStop).
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when this method is called prior to establishing a connection
            with a reader.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ClearSettings">
            <summary/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.AddOpSequence(Impinj.OctaneSdk.TagOpSequence)">
            <summary>
            Adds a sequence of tag operations (read, write, lock, kill) to the
            reader.
            </summary>
            <param name="sequence">
            The sequence of operations to add to the reader.
            </param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown if a zero length operations sequence is provided.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.EnableOpSequence(System.UInt32)">
            <summary>
            Enables a tag operation sequence on the reader.
            </summary>
            <param name="sequenceId">
            The sequence ID of the operation sequence to enable.
            </param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown if the referenced sequence does not exist on the reader.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.DeleteOpSequence(System.UInt32)">
            <summary>
            Deletes a tag operation sequence from the reader.
            </summary>
            <param name="sequenceId">
            The sequence ID of the operation sequence to delete.
            </param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown if the referenced sequence does not exist on the reader.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.DeleteAllOpSequences">
            <summary>
            Deletes all tag operation sequences from the reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QueryFeatureSet">
            <summary>
            Queries the reader for a summary of the features that it supports.
            </summary>
            <returns>
            An object summarizing the features supported by the reader.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.TurnBeaconOn(System.UInt64)">
            <summary>
            Turns the xArray beacon light on.
            </summary>
            <param name="duration">
            The period in milliseconds to blink the beacon light.
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.TurnBeaconOff">
            <summary>
            Turns the xArray beacon light off.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ResumeEventsAndReports">
            <summary>
            This function tells the reader to resume sending reports and events.
            Messages in the queue on the reader may then be sent.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">Thrown if a communication error
            occurs while talking with the reader.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QuerySettings">
            <summary>
            This function queries the reader for its current settings.
            </summary>
            <returns>An object containing the current reader settings</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">Thrown if a communication error
            occurs while talking with the reader, the reader has not
            been configured, or if the configuration was not applied
            by the SDK.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.QueryStatus">
            <summary>
            This function queries the reader for a summary of its current status.
            </summary>
            <returns>An object containing the current reader status.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">Thrown if a communication error
            occurs while talking with the reader.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.SetGpo(System.UInt16,System.Boolean)">
            <summary>
            This function is used to set the value of a GPO signal to the
            specified value. The output is set to high when state is true,
            and low when state is false.
            </summary>
            <param name="port">GPO port to set</param>
            <param name="state">Value to set GPO to</param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">Thrown if a communication error
            occurs while talking with the reader.</exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ProgramTagMemory(Impinj.OctaneSdk.ProgramTagMemoryParams)">
            <summary>
            This new method is for compatibility with v1.0. Remove in a future release. 
            Asynchronous operations should be encouraged. This method has been made
            private because it should not be called by users of the SDK.
            </summary>
            <param name="accessParams">A tag programming configuration object.</param>
            <returns>The result of the write operation</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.KillTag(Impinj.OctaneSdk.KillTagParams)">
            <summar/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.LockTag(Impinj.OctaneSdk.LockTagParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ProgramUserMemory(Impinj.OctaneSdk.ProgramUserMemoryParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ProgramEpc(Impinj.OctaneSdk.ProgramEpcParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ProgramAccessPassword(Impinj.OctaneSdk.ProgramAccessPasswordParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ProgramKillPassword(Impinj.OctaneSdk.ProgramKillPasswordParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ReadTagMemory(Impinj.OctaneSdk.ReadTagMemoryParams)">
            <summary>
            This new method is for compatibility with v1.0. Remove in a future release. 
            Asynchronous operations should be encouraged. This method has been made
            private because it should not be called by users of the SDK.
            </summary>
            <param name="accessParams">
            Object defining read memory specifics (e.g. access password or
            target tag).
            </param>
            <returns>The result of the read operation</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown if a communication error occurs while talking with the
            reader or an invalid password was provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ReadUserMemory(Impinj.OctaneSdk.ReadUserMemoryParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ReadTidMemory(Impinj.OctaneSdk.ReadTidMemoryParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReader.ReadKillPassword(Impinj.OctaneSdk.ReadKillPasswordParams)">
            <summary/>
            <param name="accessParams"/>
            <returns/>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException"/>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.TagsReported">
            <summary>
            Event to provide notification when a tag report is available.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.GpiChanged">
            <summary>
            Event to provide notification when a GPI port status changes.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.AntennaChanged">
            <summary>
            Event to provide notification when an AntennaChanged event
            occurs.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.ReportBufferWarning">
            <summary>
            Event to provide notification when the report buffer on the reader is nearly full.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.ReportBufferOverflow">
            <summary>
            Event to provide notification when the report buffer on the reader
            could not hold more tag reports.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.ReaderStarted">
            <summary>
            Event to provide notification when the reader has started.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.ReaderStopped">
            <summary>
            Event to provide notification when the reader has started.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete">
            <summary>
            Event to provide notification that a tag operation has completed,
            including the results of the operation.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.KeepaliveReceived">
            <summary>
            Event to provide notification that a keep alive TCP/IP packet
            was received from the reader.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.ConnectionLost">
            <summary>
            Event to provide notification that the TCP/IP connection to the
            Impinj Reader has been lost.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.ConnectAsyncComplete">
            <summary>
            Event to provide notification of a completed asynchronous connection attempt.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.LocationReported">
            <summary>
            Event to provide notification of a location report. Only available on the xArray.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.TransitionReported">
            <summary>
            Event to provide notification of a transition report. Only available on the xArray.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.DiagnosticsReported">
            <summary>
            Event to provide notification of a diagnostic report. Only available on the xArray.
            </summary>
        </member>
        <member name="E:Impinj.OctaneSdk.ImpinjReader.Logging">
            <summary>
            Obsolete. Do not use.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.Debug">
            <summary>
            Handle to the build in debug logging handler.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.RShell">
            <summary>
            Handle for establishing RShell communications with the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.LogLevel">
            Don't include these classes in the documentation
            \cond
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.ConnectTimeout">
            <summary>
            The connection timeout in milliseconds.
            If a connection to the reader cannot be established in this time, an exception is thrown.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.MaxConnectionAttempts">
            <summary>
            Number of times to attempt a reader connection before an exception is thrown.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.MessageTimeout">
            <summary>
            The message reply timeout.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.IsConnected">
            <summary>
            Indicates whether or not a connection to the reader exists.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.Name">
            <summary>
            Assigns a name to this reader. For example, "Dock Door #1 Reader".
            This name can be used to identify a particular reader in an application
            that controls multiple readers.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjReader.Address">
            <summary>
            Contains the IP address or hostname of the reader.
            </summary>
            <remarks>Read only.</remarks>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.TagsReportedHandler">
            <summary>
            Delegate declaration required to support declaration of TagsReported
            event.
            Internal use only - bind to the TagsReported event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="report">TagReport object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.GpiChangedHandler">
            <summary>
            Delegate declaration required to support declaration of GpiChanged
            event.
            Internal use only - bind to the GpiChanged event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="e">GpiEvent object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.AntennaEventHandler">
            <summary>
            Delegate declaration required to support declaration of AntennaChanged
            event.
            Internal use only - bind to the AntennaChanged event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="e">AntennaEvent object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.ReportBufferWarningEventHandler">
            <summary>
            Delegate declaration required to support declaration of
            ReportBufferWarning event.
            Internal use only - bind to the ReportBufferWarning event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="e">ReportBufferWarningEvent object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.ReportBufferOverflowEventHandler">
            <summary>
            Delegate declaration required to support declaration of
            ReportBufferOverflow event.
            Internal use only - bind to the ReportBufferOverflow event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="e">ReportBufferOverflowEvent object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.ReaderStartedEventHandler">
            <summary>
            Delegate declaration required to support declaration of
            ReaderStarted event.
            Internal use only - bind to the ReaderStarted event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="e">ReaderStarted object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.ReaderStoppedEventHandler">
            <summary>
            Delegate declaration required to support declaration of
            ReaderStopped event.
            Internal use only - bind to the ReaderStopped event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="e">ReaderStopped object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.TagOpCompleteHandler">
            <summary>
            Delegate declaration required to support declaration of
            TagOpComplete event.
            Internal use only - bind to the TagOpCompete event.
            </summary>
            <param name="reader">ImpinjReader object.</param>
            <param name="results">TagOpReport object.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.KeepaliveHandler">
            <summary>
            Delegate declaration required to support declaration of
            KeepaliveReceived event.
            Internal use only - bind to KeepaliveReceived event.
            </summary>
            <param name="reader">ImpinjReader object</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.ConnectionLostHandler">
            <summary>
            Delegate declaration required to support declaration of
            ConnectionLostHandler event.
            Internal use only - bind to ConnectionLost event.
            </summary>
            <param name="reader">ImpinjReader object</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.LoggingHandler">
            <summary>
            Delegate declaration required to support declaration of
            Logging event.
            Internal use only - bind to Logging event.
            </summary>
            <param name="reader">ImpinjReader</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.ConnectAsyncCompleteHandler">
            <summary>
            Delegate declaration required to support declaration of ConnectAsyncComplete event.
            Internal use only - bind to the ConnectAsyncComplete event.
            </summary>
            <param name="reader">
            If the connection attempt was successful, this contains a connected ImpinjReader instance.
            If the connection failed, this contains a disconnected ImpinjReader instance with only the address set.
            </param>
            <param name="result">
            The result of the connection attempt.
            </param>
            <param name="errorMessage">
            An error message, if an error occurred
            </param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.LocationReportedHandler">
            <summary>
            Delegate declaration required to support declaration of LocationReported event.
            Internal use only - bind to the LocationReported event.
            </summary>
            <param name="reader">The ImpinjReader that raised the event.</param>
            <param name="report">The location report.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.TransitionReportedHandler">
            <summary>
            Delegate declaration required to support declaration of TransitionReported event.
            Internal use only - bind to the TransitionReported event.
            </summary>
            <param name="reader">The ImpinjReader that raised the event.</param>
            <param name="report">The transition report.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReader.DiagnosticsReportedHandler">
            <summary>
            Delegate declaration required to support declaration of DiagnosticsReported event.
            Internal use only - bind to the DiagnosticsReported event.
            </summary>
            <param name="reader">The ImpinjReader that raised the event.</param>
            <param name="report">The diagnostic report.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiStatusGroup">
            <summary>
            Container class encapsulating all of the GPI status objects.
            This is for internal use only, and does not appear in the generated
            documentation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiStatusGroup.GetGpi(System.UInt16)">
            <summary>
            Returns the status for the specified GPI port.
            </summary>
            <returns>The GPI status or throws an exception if the port does not exist.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiStatusGroup.Add(System.Object)">
            <summary>
            Adds the provided GPI status object to the collection.
            For internal library use only.
            </summary>
            <param name="status">The GPIStatus object to add.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.GpiStatusGroup.GetEnumerator">
            <summary>
            Get a handle to the the IEnumerator interface of the GPI
            status collection.
            </summary>
            <returns>
            An IEnumerator interface object to the GPI status
            collection.</returns>
        </member>
        <member name="T:Impinj.OctaneSdk.HubConnectedStatus">
            <summary>
            Enum defining the antenna hub connection status options.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubConnectedStatus.Unknown">
            <summary>
            The antenna hub is in an unknown state.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubConnectedStatus.Disconnected">
            <summary>
            The antenna hub is disconnected.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubConnectedStatus.Connected">
            <summary>
            The antenna hub is connected.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.HubFaultStatus">
            <summary>
            Enum defining the antenna hub fault options.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.No_Fault">
            <summary>
            No known antenna hub fault exists.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.RF_Power">
            <summary>
            A non-specific RF power distribution error has occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.RF_Power_On_Hub_1">
            <summary>
            An RF power distribution error has occurred; RF power is present
            on Hub 1.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.RF_Power_On_Hub_2">
            <summary>
            An RF power distribution error has occurred; RF power is present
            on Hub 2.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.RF_Power_On_Hub_3">
            <summary>
            An RF power distribution error has occurred; RF power is present
            on Hub 3.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.RF_Power_On_Hub_4">
            <summary>
            An RF power distribution error has occurred; RF power is present
            on Hub 4.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.No_Init">
            <summary>
            The hub has not yet been initialized.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.Serial_Overflow">
            <summary>
            A serial communications error has occurred between the reader and
            the hub controller.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.HubFaultStatus.Disconnected">
            <summary>
            The antenna hub is disconnected.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaHubStatus">
            <summary>
            Class encapsulating all antenna hub status information.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaHubStatus.Connected">
            <summary>
            The current hub connection status; either Connected, Disconnected
            or Unknown.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaHubStatus.Fault">
            <summary>
            The current hub fault status; either No_Fault, RF_Power,
            RF_Power_On_Hub_1, RF_Power_On_Hub_2, RF_Power_On_Hub_3,
            RF_Power_On_Hub_4, No_Init, Serial_Overflow or Disconnected.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.AntennaHubStatus.HubId">
            <summary>
            The current hub ID.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaIds">
            <summary>
            Helper class used when identifying that all antennas should be used
            when configuring a tag operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaIds.All">
            <summary>
            Constant used to configure all antennas for use in a tag
            operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TargetTag">
            <summary>
            Helper class used to identify a specific tag or set of tags on which to
            perform an operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TargetTag.MemoryBank">
            <summary>
            The tag memory bank to filter on.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TargetTag.BitPointer">
            <summary>
            A pointer to the bit to start the filter comparison on.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TargetTag.Data">
            <summary>
            The specific data value to filter on.
            Should be expressed as a hex string.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TargetTag.Mask">
            <summary>
            A mask, in hex, which specifies which bits to 
            match on and which to ignore. If a mask is not 
            specified, all bits will be used to match.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagReadOp">
            <summary>
             Class used to specify a tag read operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReadOp.MemoryBank">
            <summary>
            Parameter defining Memory Bank to access for operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReadOp.WordPointer">
            <summary>
            Parameter defining Word Pointer to access for operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReadOp.WordCount">
            <summary>
            Parameter defining the number of words to access for operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagReadOp.AccessPassword">
            <summary>
            Parameter defining Access Password to use for operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadUserMemoryResult">
            <summary>
            Class that contains the result of a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ReadUserMemory(Impinj.OctaneSdk.ReadUserMemoryParams)"/>
            operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LowDutyCycleSettings">
            <summary>
            Class for configuring the Impinj Reader Low Duty Cycle reader capability
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LowDutyCycleSettings.IsEnabled">
            <summary>
            Flag indicating whether the reader Low Duty Cycle feature is
            enabled.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LowDutyCycleSettings.EmptyFieldTimeoutInMs">
            <summary>
            Specifies in milliseconds the time the Reader will wait before entering
            low duty cycle mode.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LowDutyCycleSettings.FieldPingIntervalInMs">
            <summary>
            Specifies in milliseconds how frequently the Reader will rescan the
            field of view for tags.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpoMode">
            <summary>
            Defines the modes that may be used to configure the
            GPO ports when the Advanced GPO features are used.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.Normal">
            <summary>
            Normal mode; GPO value must be set via SetGpo()
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.Pulsed">
            <summary>
            Pulsed mode; GPO value must be set via SetGpo(), but will change to
            opposite state after a timeout.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.ReaderOperationalStatus">
            <summary>
            Reader Operational Status; GPO value of true means reader is
            operational, false means the reader is not operational.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.LLRPConnectionStatus">
            <summary>
            LLRP Connection Status; GPO value of true means the LLRP connection
            is operational, false means the LLRP connection is not operational.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.ReaderInventoryStatus">
            <summary>
            Reader Inventory Status; GPO value is true while the reader is
            performing a tag inventory.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.NetworkConnectionStatus">
            <summary>
            Network Connection Status; GPO value of true means that the Network
            connection is operational, false means that the network connection
            is not operational.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoMode.ReaderInventoryTagsStatus">
            <summary>
            Reader Inventory Tag Status; GPO value is true whenever a unique tag
            has been inventoried.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpoConfig">
            <summary>
            Class used to define the configuration settings for an individual
            general purpose output (GPO) port.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoConfig.Mode">
            <summary>
            Defines which Advanced GPO mode to use.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpoConfig.GpoPulseDurationMsec">
            <summary>
            Defines the pulse duration when the Pulsed Advanced GPO mode is used.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.GpoConfig.#ctor">
            <summary>
            Constructor for GpoConfig object.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpoConfig.PortNumber">
            <summary>
            Specifies the GPI port number (starting at port 1) to configure.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when PortNumber is set to 0;
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiEvent">
            <summary>
            Class used to encapsulate the details of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.GpiChanged"/> reader event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpiEvent.PortNumber">
            <summary>
            Parameter defining GPI port number for event
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.GpiEvent.State">
            <summary>
            Parameter defining GPI state for event
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.PlacementConfig">
            <summary>
            Class used to define the placement configuration for an xArray.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PlacementConfig.HeightCm">
            <summary>
            Used to initialize the Array mounting height above the floor. When not specified, the default value is 457 cm.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PlacementConfig.FacilityXLocationCm">
            <summary>
            Used to locate an xArray in a facility. The default value is 0 and is not required with a single xArray.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PlacementConfig.FacilityYLocationCm">
            <summary>
            Used to locate an xArray in a facility. The default value is 0 and is not required with a single xArray.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.PlacementConfig.OrientationDegrees">
            <summary>
            Specifies the orientation of the array in degrees (-180 - 180) with respect to the X orientation of the device.  
            Default is 0 and is not required with a single xArray deployment.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramKillPasswordResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramKillPassword(Impinj.OctaneSdk.ProgramKillPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.OctaneSdkException">
            <summary>
            Exception class for uniquely identifying Impinj Octane SDK exceptions.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.OctaneSdkException.#ctor">
            <summary>
            Creates an OctaneSdkException object with no message.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.OctaneSdkException.#ctor(System.String)">
            <summary>
            Creates an OctandSdkException object with a message.
            </summary>
            <param name="message">The message to include with the exception.</param>
        </member>
        <member name="T:Impinj.OctaneSdk.CommunicationsStandardType">
            <summary>
            Enum used to identify the supported regions on Impinj readers, which has
            an impact on the RF frequencies, transmit power level and dwell times
            that the reader is allowed to use.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Unspecified">
            <summary>
            Unspecified regulatory region.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.US_FCC_Part_15">
            <summary>
            Comply with Federal Communications Commission (FCC) Part 15.247 and
            15.249. Required for use in North America.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.ETSI_302_208">
            <summary>
            Comply with ETSI EN 302 208 specification. Required for use
            in the European Union and United Arab Emirates (UAE).
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.ETSI_300_220">
            <summary>
            Comply with ETSI EN 30 2220 specification, replaced in 2004 by the
            ETSI EN 302 208 specification. Not supported on Speedway Revolution.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Australia_LIPD_1W">
            <summary>
            Comply with ACMA’s Low Interference Potential Devices (LIPD) Class
            License 2000, with a maximum transmit power of 1 Watt.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Australia_LIPD_4W">
            <summary>
            Comply with ACMA’s Low Interference Potential Devices (LIPD) Class
            License 2000, with a maximum transmit power of 4 Watts.
            Required for use in Australia.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Japan_ARIB_STD_T89">
            <summary>
            Comply with ARIB's STD-T89 specification. Required for use in Japan.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Hong_Kong_OFTA_1049">
            <summary>
            Comply with the Office of the Telecommunications Authority (OFTA)
            of Hong Kong, China, standard HKTA 1049.
            Required for use in Hong Kong.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Taiwan_DGT_LP0002">
            <summary>
            Comply with Taiwan Directorate General of Telecommunications (DGT)
            specification LP0002.
            Required for use in Taiwan.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.CommunicationsStandardType.Korea_MIC_Article_5_2">
            <summary>
            Comply with Ministry of Information and Communication (MIC) of
            Republic of Korea (South Korea) RFID standard.
            Required for use in South Korea.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RxSensitivityTableEntry">
            <summary>
            Structure used to map a dBm value for receiver sensitivity to the
            appropriate index in the sensitivity level table used internally
            to the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RxSensitivityTableEntry.Index">
            <summary>
            Reader internal receiver sensitivity table index.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RxSensitivityTableEntry.Dbm">
            <summary>
            Receive sensitivity in dBm.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TxPowerTableEntry">
            <summary>
            Structure used to map a dBm value for transmit power to the appropriate
            index in the transmit power level table used internally to the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TxPowerTableEntry.Index">
            <summary>
            Reader internal transmit power table index.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TxPowerTableEntry.Dbm">
            <summary>
            Transmit power in dBm.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.FeatureSet">
            <summary>
            Container class used to encapsulate the features supported by a given
            Impinj reader.  An object of this type is returned by a call to
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.QueryFeatureSet"/>.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.FeatureSet.FromXmlString(System.String)">
            <summary>
            Method for importing reader feature set data from an XML string.
            </summary>
            <param name="xml">XML string to parse.</param>
            <returns>Populated FeatureSet object.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.FeatureSet.Load(System.String)">
            <summary>
            Read the XML representation of FeatureSet from a file and return a 
            new FeatureSet instance with those values.
            </summary>
            <param name="path">The path and filename of the XML file to load.</param>
            <returns>Populated instance of FeatureSet class based on file contents.</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ModelNumber">
            <summary>
            EPC Global model number identifier for the Impinj Reader,
            e.g. 2001002 for a 4 port Speedway Revolution.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ModelName">
            <summary>
            Model name of the Impinj Reader, e.g. "Speedway R420" for a
            4 port Speedway Revolution.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.SerialNumber">
            <summary>
            Serial number of the Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.SoftwareVersion">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.FirmwareVersion">
            <summary>
            Firmware version running on Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.AntennaCount">
            <summary>
            Number of antennas supported by Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.GpiCount">
            <summary>
            Number of general purpose input (GPI) ports supported by Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.GpoCount">
            <summary>
            Number of general purpose output (GPO) ports supported by
            Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.MaxAccessSpecs">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.MaxOperationSequences">
            <summary>
            The maximum number of tag operation sequences supported by the
            Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.MaxOperationsPerSequence">
            <summary>
            The maximum number of individual tag operations per sequence
            supported by the Impinj reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.CommunicationsStandard">
            <summary>
            The Regulatory standard supported by the reader.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsTagAccessAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsFilteringAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsGpiDebounceAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsLinkMonitorAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsMultiwordBlockWriteAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsPhaseAngleReportingAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsSerializedTidReportingAvailable">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsFastIdAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsImpinjRssiReportingAvailable">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.ReaderIdentity">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.TxPowers">
            <summary>
            Table that correlates transmit powers in dBm to an index in the
            reader internal power table.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.RxSensitivities">
            <summary>
            Table that correlates a receive sensitivity in dBm to an index
            in the reader internal receive sensitivity table.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.FeatureSet.IsHoppingRegion">
            <summary>
            Indicates whether frequency hopping supported by the current
            CommunicationsStandard?
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReaderStartedEvent">
            <summary>
            Class used to encapsulate the details of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.ReaderStarted"/> reader event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TransitionReportType">
            <summary>
            Enum that specifies the transition report type.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TransitionReportType.NewTag">
            <summary>
            New tag. 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TransitionReportType.StrayTag">
            <summary>
            Stray tag.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TransitionReportType.TagTransition">
            <summary>
            Stray tag.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TransitionReport">
            <summary>
            xArray transition report
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionReport.Epcs">
            <summary>
            Contents of the tag EPC memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionReport.Timestamp">
            <summary>
            The time stamp of the transition event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionReport.FromZoneId">
            <summary>
            The FromZoneID field contains the Zone ID where the transition event began.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionReport.ToZoneId">
            <summary>
            The ToZoneID field contains the Zone ID where the transition event ended.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionReport.Confidence">
            <summary>
            The Confidence field contains confidence that the event occurred in the form of a percentage. 
            0 is not confident. 100 is perfectly confident.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionReport.ReportType">
            <summary>
            The transition report type.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaEventType">
            <summary>
            Enum defining the possible types of antenna event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaEventType.AntennaDisconnected">
            <summary>
            Indicates an antenna disconnected event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaEventType.AntennaConnected">
            <summary>
            Indicates an antenna connected event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AntennaEvent">
            <summary>
            Class used to encapsulate the details of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.AntennaChanged"/> reader event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaEvent.PortNumber">
            <summary>
            Port number of the affected antenna.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AntennaEvent.State">
            <summary>
            State to which antenna changed, prompting the event.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.QtPersistence">
            <summary>
            Enumeration used to manage whether switching to the private Monza QT Data Profile
            should be persistent, or whether the tag should revert to the private state
            once the tag loses power.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtPersistence.Unknown">
            <summary>
            Leave the tag persistence configuration as-is.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtPersistence.Temporary">
            <summary>
            Stay in the private data profile a until the tag loses power, when it will
            automatically revert to the Public profile.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtPersistence.Permanent">
            <summary>
            Stay in the private data profile.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.QtDataProfile">
            <summary>
            Enumeration used to determine which QT data profile to use.
            The Private/Public profile capability, available in Monza 4QT tag chips,
            provides two memory configurations (i.e. profiles) in a single chip;
            one Private and one Public. Only one profile is exposed at a time.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtDataProfile.Unknown">
            <summary>
            Leave the tag data profile as-is.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtDataProfile.Private">
            <summary>
            Select the Private, or confidential, Data Profile, where users have
            access to a 128-bit EPC, 512-bit User Memory, 16-bit TID header,
            and 48 bit serial number.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtDataProfile.Public">
            <summary>
            Select the Public Data Profile, where users have access to the 96-bit
            public EPC and the 32 bit base TID.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.QtAccessRange">
            <summary>
            Enumeration used to determine whether to configure the tag in reduced sensitivity
            (i.e. Short Range) mode, or not.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtAccessRange.Unknown">
            <summary>
            Leave tag access range as-is.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtAccessRange.NormalRange">
            <summary>
            Normal-Range tells tag to use normal sensitivity.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtAccessRange.ShortRange">
            <summary>
            Short-Range tells tag to reduce sensitivity, adding a layer of
            physical security by preventing readers farther than roughly one
            meter from the tag from switching the tag from Public to Private
            (or vice versa).
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagQtSetOp">
            <summary>
            Used to set Monza QT tag chip features.
            Through QT technology, a tag owner/user can maintain two data profiles
            (one public, one private), allowing confidentiality of business-sensitive
            data while assuring consumers of privacy. The tag owner stores
            confidential data in the private data profile, which is protected by a
            password-controlled command and may only be accessed at very short read
            distances.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtSetOp.AccessPassword">
            <summary>
            Tag access password. Required only if the tag's access password
            has been set.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtSetOp.Persistence">
            <summary>
            Determines whether switching to the tag private Data Profile
            should be persistent, or whether the tag should revert to
            the private state once the tag loses power.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtSetOp.DataProfile">
            <summary>
            Determines whether to access the tag private or public
            data profile.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtSetOp.AccessRange">
            <summary>
            Determines whether to reduce tag access range down to a meter
            or so, or not.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.KillResultStatus">
            <summary>
            Enum defining the possible status outcomes for the tag kill operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KillResultStatus.Success">
            <summary>
            The tag kill operation was successful.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KillResultStatus.ZeroKillPasswordError">
            <summary>
            The tag kill password was set to zero; a non-zero password is
            required to kill a tag.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KillResultStatus.InsufficientPower">
            <summary>
            The tag did not meet the required RSSI threshold.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KillResultStatus.NonspecificTagError">
            <summary>
            An unidentified tag error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KillResultStatus.NoResponseFromTag">
            <summary>
            No ACK response was received from the tag in response to the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KillResultStatus.NonspecificReaderError">
            <summary>
            An unidentified reader error occurred.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagKillOpResult">
            <summary>
            Specialization of <see cref="T:Impinj.OctaneSdk.TagOpResult"/> class that contains the
            results of an individual tag kill operation, as reported in the
            <see cref="T:Impinj.OctaneSdk.TagOpReport"/> parameter of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/> event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagKillOpResult.Result">
            <summary>
            The result of the tag kill operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RShellCmdStatus">
            <summary>
            Enum used as the return type for the <see cref="M:Impinj.OctaneSdk.RShellEngine.Send(System.String,System.String@)"/>
            method, indicating whether it succeeds, or not.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RShellCmdStatus.Success">
            <summary>
            Indicates that the %Impinj reader reported that the RShell command
            succeeded.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RShellCmdStatus.Failure">
            <summary>
            Indicates that the %Impinj reader reported that the RShell command
            failed.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.RShellCmdStatus.Unknown">
            <summary>
            Indicates that an error, such as a timeout, has
            occurred when sending an RShell command to the %Impinj reader.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.RShellEngine">
            <summary>
            Class for interacting with the RShell interface of an %Impinj reader.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.RShellEngine.Send(System.String,System.String@)">
            <summary>
            Used to send an RShell command to an %Impinj reader.
            </summary>
            <param name="cmd">
            The RShell command to send to the reader
            (e.g. "show network summary").
            </param>
            <param name="reply">
            The output from the reader that results from the cmd command.
            </param>
            <returns>
            Enum identifying whether the %Impinj reader reported that the RShell
            command succeeded or failed.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.RShellEngine.Open(System.String,System.String,System.String,System.Int32)">
            <summary>
            Used to open an RShell session with the %Impinj reader.
            </summary>
            <param name="address">
            The reader hostname or IP address to establish an RShell session with.
            </param>
            <param name="username">
            The username used to log on to the %Impinj reader with (reader default
            is "root").
            </param>
            <param name="password">
            The password associated with the reader username (reader default is
            "impinj" for the user "root").
            </param>
            <param name="timeoutMs">
            The timeout period for establishing an RShell connection.
            </param>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when either an RShell connection cannot be established with
            the %Impinj reader, an invalid username or password is provided, or a
            connection timeout occurs.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.RShellEngine.Close">
            <summary>
            Used to close the RShell session with an %Impinj reader.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramAccessPasswordParams">
            <summary>
            Specialization of the <see cref="T:Impinj.OctaneSdk.ProgramTagMemoryParams"/> class used to carry the
            configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramAccessPassword(Impinj.OctaneSdk.ProgramAccessPasswordParams)"/>
            operation
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramAccessPasswordParams.#ctor">
            <summary>
            Creates a new instance of the ReadKillPasswordParams class that
            initializes NewAccessPassword to "00000000".
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramAccessPasswordParams.NewAccessPassword">
            <summary>
            The access password to write to memory. This should be specified as a hex string.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.MemoryBank">
            <summary>
            Enum for defining the tag memory bank to access.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.Reserved">
            <summary>
            Tag reserved memory.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.Epc">
            <summary>
            Tag Electronic Product Code (EPC) memory
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.Tid">
            <summary>
            Tag identifier (TID) memory
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.MemoryBank.User">
            <summary>
            Tag user memory
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjReaderDebug">
            <summary>
            Class for exporting the reader LLRP configuration to file for debug
            purposes.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReaderDebug.#ctor(Impinj.OctaneSdk.ImpinjReader)">
            <summary>
            Creates an instance of the ImpinjReaderDebug class.
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjReaderDebug.SaveLlrpConfigToFile(System.String)">
            <summary>
            Saves the reader LLRP configuration to a text file.
            </summary>
            <param name="path">
            The path and filename to save the LLRP configuration data to.
            </param>
        </member>
        <member name="T:Impinj.OctaneSdk.TagModelName">
            <summary>
            An enumeration used to indicate a tag's model name.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Monza4QT">
            <summary>
            %Impinj Monza 4QT
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Monza4U">
            <summary>
            %Impinj Monza 4U
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Monza4E">
            <summary>
            %Impinj Monza 4E
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Monza4D">
            <summary>
            %Impinj Monza 4D
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Monza5">
            <summary>
            %Impinj Monza 5
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Monza5U">
            <summary>
            %Impinj Monza 5U
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.MonzaX_2K_Dura">
            <summary>
            %Impinj Monza X-2K Dura
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.MonzaX_8K_Dura">
            <summary>
            %Impinj Monza X-8K Dura
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagModelName.Other">
            <summary>
            An unknown tag
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagModelDetails">
            <summary>
            Contains model-specific details about the tag.
            You must enable FastID in the TagReport to get this information.
            FastID is only available on %Impinj Monza 4 and later tags.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagModelDetails.ModelName">
            <summary>
            The model name of the tag.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagModelDetails.UserMemorySizeBits">
            <summary>
            The size of the User memory bank (in bits).
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagModelDetails.EpcSizeBits">
            <summary>
            The maximum supported EPC size (in bits). 
            This size does not include the PC bits or CRC. 
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagModelDetails.SupportsQt">
            <summary>
            Indicates whether or not the tag supports the 
            %Impinj QT features.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.SectorConfig">
            <summary>
            Contains sector configuration for xArray
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SectorConfig.SectorId">
            <summary>
            The number of the sector to configure (1-9)
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SectorConfig.TxPowerInDbm">
            <summary>
            Defines the antenna transmit power in dBm (e.g. 24.0 dBm).
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SectorConfig.RxSensitivityInDbm">
            <summary>
            Defines the receive sensitivity
            in dBm (e.g. -55 dBm).
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SectorConfig.MaxRxSensitivity">
            <summary>
            Specifies that the maximum antenna receive sensitivity setting should be used.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SectorConfig.MaxTxPower">
            <summary>
            Specifies that the maximum antenna transmit power setting should be used.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.SectorConfig.TxFrequenciesInMhz">
            <summary>
            Transmit frequencies to use in regions that allow it.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LocationReportType">
            <summary>
            Enum that specifies the location report type.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LocationReportType.Entry">
            <summary>
            An entry report 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LocationReportType.Update">
            <summary>
            An update report 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.LocationReportType.Exit">
            <summary>
            An exit report 
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LocationReport">
            <summary>
            xArray location report
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationReport.Epc">
            <summary>
            Contents of the tag EPC memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationReport.Timestamp">
            <summary>
            The time stamp of the transition event
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationReport.LocationXCm">
            <summary>
            The X location in centimeters
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationReport.LocationYCm">
            The Y location in centimeters
        </member>
        <member name="P:Impinj.OctaneSdk.LocationReport.ConfidenceFactors">
            <summary>
            The Confidence field contains confidence that the event occurred in the form of a percentage. 
            0 is not confident. 100 is perfectly confident.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationReport.ReportType">
            <summary>
            The location report type.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagWriteOp">
            <summary>
            Class used to specify a tag write operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWriteOp.MemoryBank">
            <summary>
            Tag memory bank to write to.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWriteOp.WordPointer">
            <summary>
            Numeric pointer to first word to write to (e.g. the first word would be word 0).
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWriteOp.Data">
            <summary>
            Data to write into the tag memory bank, starting at the word pointed to by WordPointer.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagWriteOp.AccessPassword">
            <summary>
            Tag access password.  Required only if the tag target memory bank 
            is locked and an access password has been set.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.QtGetConfigResultStatus">
            <summary>
            Enumeration used to indicate the results of a
            QtGetConfig operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtGetConfigResultStatus.Success">
            <summary>
            The tag QT operation was successful.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtGetConfigResultStatus.NonspecificTagError">
            <summary>
            An unidentified tag error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtGetConfigResultStatus.NoResponseFromTag">
            <summary>
            No ACK response was received from the tag in response to the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtGetConfigResultStatus.NonspecificReaderError">
            <summary>
            An unidentified reader error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.QtGetConfigResultStatus.IncorrectPasswordError">
            <summary>
            An incorrect QT password was used.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagQtGetOpResult">
            <summary>
            Contains the current QT status of a tag.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtGetOpResult.Result">
            <summary>
            The result of the tag QT operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtGetOpResult.DataProfile">
            <summary>
            Determines whether to access the tag private or public
            data profile.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagQtGetOpResult.AccessRange">
            <summary>
            Determines whether to reduce tag access range down to a meter
            or so, or not.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagData">
            <summary>
            Class used to hold tag data in the raw form in which it is stored
            on the tag (list of unsigned shorts).
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromWordList(System.Collections.Generic.List{System.UInt16})">
            <summary>
            Constructor that creates a TagData object populated with data from
            a list of words (ushort).
            </summary>
            <param name="data">Populated list of words.</param>
            <returns>Populated TagData object</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when a zero length or null word list is provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromByteArray(System.Byte[])">
            <summary>
            Constructor that creates a TagData object populated with data from
            a byte array.
            </summary>
            <param name="data">Populated byte array.</param>
            <returns>Populated TagData object</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when a zero length or null byte array is provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromUnsignedInt(System.UInt32)">
            <summary>
            Constructor that creates a TagData object populated with data from
            an unsigned int.
            </summary>
            <param name="data">Unsigned int.</param>
            <returns>Populated TagData object.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromWordArray(System.UInt16[])">
            <summary>
            Constructor that creates a TagData object populated with data from
            an array of words
            </summary>
            <param name="data">Populated array of words.</param>
            <returns>Populated TagData object.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when a null word array is provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromWord(System.UInt16)">
            <summary>
            Constructor that creates a TagData object populated with data from a single 16-bit word
            </summary>
            <param name="data">Word to add to the TagData object.</param>
            <returns>Populated TagData object.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when a null word is provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromByteList(System.Collections.Generic.List{System.Byte})">
            <summary>
            Constructor that creates a TagData object populated with data from
            a list of bytes.
            </summary>
            <param name="data">Populated list of bytes.</param>
            <returns>Populated TagData object.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when a zero length or null list of bytes is provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.FromHexString(System.String)">
            <summary>
            Constructor that creates a TagData object populated with data from
            a Hex string of arbitrary length.
            </summary>
            <param name="hex">Hex number represented as a string.</param>
            <returns>Populated TagData object.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when a null or non-hex string is provided.
            </exception>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.ToList">
            <summary>
            Conversion utility that outputs the data of the TagData object as a
            list.
            </summary>
            <returns>Contents of TagData as a List of words (ushort).</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.ToHexWordString">
            <summary>
            Conversion utility that outputs the data of the TagData object as a
            string in hexadecimal format, with each word separated by a space.
            </summary>
            <returns>Contents of TagData represented as a string.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.ToHexString">
            <summary>
            Conversion utility that outputs the data of the TagData object as a
            string in hexadecimal format, with no spaces between each word.
            </summary>
            <returns>Contents of TagData represented as a string.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.ToString">
            <summary>
            Conversion utility that outputs the data of the TagData object as a
            string in hexadecimal format, with each word separated by a space.
            </summary>
            <returns>Contents of TagData represented as a string.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.TagData.ToUnsignedInt">
            <summary>
            Conversion utility that outputs the data of the TagData object as an
            unsigned int.  This will only work for TagData objects that contain
            1 or 2 16-bit words of data.
            </summary>
            <returns>Up to 2 words of data as an unsigned int.</returns>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when the TagData object contains more than 32-bits of data.
            </exception>
        </member>
        <member name="P:Impinj.OctaneSdk.TagData.CountBytes">
            <summary>
            The size of the tag data, in bytes.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportMode">
            <summary>
            Enum for defining how often inventory reports are sent from the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.WaitForQuery">
            <summary>
            Buffer on the reader and only send the tag report once asked for.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.Individual">
            <summary>
            Generate reports one at a time.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.IndividualUnbuffered">
            <summary/>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportMode.BatchAfterStop">
            <summary>
            Buffer on the reader until the reader has stopped.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportConfig">
            <summary>
            Class for configuring the tag inventory reports returned by the reader.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportConfig.IncludePcBits">
            <summary>Include the Protocol Control (PC) bits with each tag read.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeAntennaPortNumber">
            <summary>Include Antenna Port Number in the inventory report</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeChannel">
            <summary>Include the Channel ID in the report</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeFirstSeenTime">
            <summary>Include the first seen timestamp of the tag.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeLastSeenTime">
            <summary>Include the last seen timestamp of the tag.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludePeakRssi">
            <summary>Include the Peak RSSI for the tag response.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeSeenCount">
            <summary>Include the number of times a tag was seen within that report</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeSerializedTid">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeFastId">
            <summary>Include the TID using FastID on Monza 4 and Monza 5 chips</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludePhaseAngle">
            <summary>Include the Phase Angle with each tag read.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeDopplerFrequency">
            <summary>Include the Doppler Frequency shift over the transmission of the EPC.
            NOTE : ReaderMode must be set to DenseReaderM8 to receive valid Doppler values.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeGpsCoordinates">
            <summary>Include the GPS coordinates with each read. Must require proper external hardware.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.IncludeCrc">
            <summary>Enable the reporting of the CRC bits for the EPC.</summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.Mode">
            <summary>
            The Mode in which inventory tag reports are generated.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReportConfig.OptimizedReadOps">
            <summary>
            A list of up to two optimized read operations.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadUserMemoryParams">
            <summary>
            Specialization of the <see cref="T:Impinj.OctaneSdk.ReadTagMemoryParams"/> class used to carry the
            configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ReadUserMemory(Impinj.OctaneSdk.ReadUserMemoryParams)"/>
            operation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ReadUserMemoryParams.#ctor">
            <summary>
            Creates a new instance of the ReadUserMemoryParams class that
            initializes WordCount and WordPointer to 0.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadUserMemoryParams.WordCount">
            <summary>
            The number of words to read.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ReadUserMemoryParams.WordPointer">
            <summary>
            The word to start writing from.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadKillPasswordResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ReadKillPassword(Impinj.OctaneSdk.ReadKillPasswordParams)"/>
            operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.KillTagResult">
            <summary>
            Class that contains the result of 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.KillTag(Impinj.OctaneSdk.KillTagParams)"/>
            operation
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.KillTagResult.KillResult">
            <summary>
            Details of the tag kill operation result.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiConfig">
            <summary>
            Class that is used to define the configuration settings for an
            individual general purpose input (GPI) port.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiConfig.IsEnabled">
            <summary>
            Specifies whether this port should be enabled.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiConfig.DebounceInMs">
            <summary>
            Specifies a time interval to wait before the reader will accept
            that a GPI state change is persistent.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiConfig.PortNumber">
            <summary>
            Specifies the GPI port number (starting at port 1) to configure.
            </summary>
            <exception cref="T:Impinj.OctaneSdk.OctaneSdkException">
            Thrown when PortNumber is set to 0;
            </exception>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStartMode">
            <summary>
            Enum defining the possible Impinj reader autostart modes.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.None">
            <summary>
            No autostart mode specified
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.Immediate">
            <summary>
            Start immediately after the reader is configured.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.Periodic">
            <summary>
            Periodic autostart mode specified.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartMode.GpiTrigger">
            <summary>
            GPI trigger autostart mode specified.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.AutoStartConfig">
            <summary>
            Class for defining the trigger conditions that will prompt an Impinj
            reader to automatically start operation. Even when an auto-start trigger
            is set, the Reader may be explicitly started using the
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.Stop"/> method.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartConfig.Mode">
            <summary>
            Indicates whether and how the Reader should automatically start;
            either None, Immediate, Periodic or GpiTrigger.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartConfig.GpiPortNumber">
            <summary>
            When using GpiTrigger mode, this is the port number of a GPI; when
            it changes to the GpiLevel value the Reader starts. Possible values
            are 1-4. Note that the GPI port must be enabled
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartConfig.GpiLevel">
            <summary>
            When using GpiTrigger mode, and when the GPI Port changes to this
            level, then the reader starts. True for high, false for low.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartConfig.FirstDelayInMs">
            <summary>
            When using Periodic mode, this specifies a time offset, or how long
            the Reader delays before it first starts, either after the UTCTimestamp,
            or after receiving the Settings. After that, the Reader will, if stopped,
            start according to PeriodInMs. Zero (0) means there is no initial delay.
            Possible values are 0 to 1000000000.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartConfig.PeriodInMs">
            <summary>
            When using Periodic mode, this is how often the Reader tries to start
            if it is stopped. The period is carefully maintained, and is relative
            to the previous periodic start. It has nothing to do with when the
            Reader stops. Zero (0) means there is no periodic start, only one
            start after the FirstDelayInMs. Possible values are 0 to 1000000000.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.AutoStartConfig.UtcTimestamp">
            <summary>
            UTC timestamp establishing the zero time for autostart periodic
            mode timers.  If a UTC time is specified, the the first start time
            is determined as (UTC time + offset).  Otherwise, the first start
            time is determined as (time of message receipt + offset).
            Subsequent start times = first start time + k * period (where, k > 0)
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TransitionZone">
            <summary>
            Class used to define a zone for the transition algorithm
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.TransitionZone.#ctor">
            <summary>
            Constructor for transition zone.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionZone.SectorIds">
            <summary>
            Contains the xArray placement configuration.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionZone.ZoneId">
            <summary>
            A zone is a unique identifier and a list of sector IDs that comprise the zone.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagWordPointer">
            <summary>
            Helper class used for accessing the tag kill or access passwords.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWordPointer.KillPassword">
            <summary>
            Constant used to point to Kill Password in reserved memory.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagWordPointer.AccessPassword">
            <summary>
            Constant used to point to Access Password in reserved memory.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ProgramKillPasswordParams">
            <summary>
            Specialization of ProgramTagMemoryParams class used to carry the
            configuration for a
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ProgramKillPassword(Impinj.OctaneSdk.ProgramKillPasswordParams)"/>
            operation.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ProgramKillPasswordParams.#ctor">
            <summary>
            Creates a new instance of the ProgramKillPasswordParams class that
            initializes NewKillPassword to "00000000".
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ProgramKillPasswordParams.NewKillPassword">
            <summary>
            The kill password to write to memory. This should be specified as a hex string.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadTidMemoryResult">
            <summary>
            Class to carry the results of a 
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.ReadTidMemory(Impinj.OctaneSdk.ReadTidMemoryParams)"/>
            operation.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.KeepaliveConfig">
            <summary>
            Helper class used to manage the reader Keep Alive event configuration
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KeepaliveConfig.Enabled">
            <summary>
            Parameter indicating whether the Keep Alive event is enabled or not.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KeepaliveConfig.PeriodInMs">
            <summary>
            Parameter defining the Keep Alive event interval.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KeepaliveConfig.EnableLinkMonitorMode">
            <summary>
            If link monitor mode is enabled, the reader will automatically
            shut down the network connection if it doesn't receive replies
            (ACKs) to keepalive messages. It does this after N missed replies,
            where N is specified by the parameter LinkDownThreshold.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.KeepaliveConfig.LinkDownThreshold">
            <summary>
            Specifies the number of missed keepalive replies before 
            the reader shuts down the network connection.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ImpinjTimestamp">
            <summary>
            Timestamp class supporting Impinj Reader and LLRP timestamp data.
            Timestamps from the reader are microseconds since the Epoch
            (00:00:00 UTC, January 1, 1970) (16 digit numbers)
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjTimestamp.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjTimestamp.#ctor(System.DateTime)">
            <summary>
            Constructor that translates standard DateTime data into
            ImpinjTimeStamp format.
            </summary>
            <param name="dt">Standard DateTime timestamp.</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjTimestamp.#ctor(System.UInt64)">
            <summary>
            Constructor that takes unsigned long (Impinj reader) timestamp data.
            </summary>
            <param name="utc">
            Unsigned long format timestamp; microseconds since the
            Epoch (00:00:00 UTC, January 1, 1970) (16 digit number).
            </param>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjTimestamp.#ctor(Org.LLRP.LTK.LLRPV1.UNION_Timestamp)">
            <summary>
            Constructor that takes LLRP timestamp data.
            </summary>
            <param name="timestampFromLlrp">LLRP timestamp object</param>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjTimestamp.FromUtc(System.UInt64)">
            <summary>
            Conversion utility that outputs the ImpinjTimestamp data into
            DateTime format, plus a tick count.
            A Tick is 100 nanoseconds, so a microsecond is 10 Ticks.
            </summary>
            <param name="utc">The tick count to add to the ImpinjTimestamp data.</param>
            <returns>
            A DateTime object comprised of the current ImpinjTimestamp value and
            the supplied tick count.
            </returns>
        </member>
        <member name="M:Impinj.OctaneSdk.ImpinjTimestamp.ToString">
            <summary>
            Conversion utility that outputs the ImpinjTimestamp data as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjTimestamp.Utc">
            <summary>
            Time data member variable.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.ImpinjTimestamp.LocalDateTime">
            <summary>
            Utility that outputs the ImpinjTimestamp data in local time format.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.BlockPermalockMask">
            <summary>
            Uses to specify which blocks to permalock.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.BlockPermalockMask.FromBlockNumber(System.UInt16)">
            <summary>
            Creates a block permalock mask from the specified block.
            </summary>
            <param name="block"></param>
            <returns>A block permalock mask</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.BlockPermalockMask.FromBlockNumberArray(System.UInt16[])">
            <summary>
            Creates a block permalock mask from an array of block numbers.
            </summary>
            <param name="blocks"></param>
            <returns>A block permalock mask</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.BlockPermalockMask.ToHexString">
            <summary>
            Converts the block permalock mask into a hexadecimal string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Impinj.OctaneSdk.BlockPermalockMask.Mask">
            <summary>
            Gets the block permalock mask.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.WordPointers">
            <summary>
            Helper class used when defining tag memory accesses.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WordPointers.KillPassword">
            <summary>
            Constant used to point to Kill Password in reserved memory.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WordPointers.AccessPassword">
            <summary>
            Constant used to point to Access Password in reserved memory.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WordPointers.Crc">
            <summary>
            Constant used to point to EPC memory bank CRC word.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WordPointers.PcBits">
            <summary>
            Constant used to point to EPC memory bank PC Bits word.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.WordPointers.Epc">
            <summary>
            Constant used to point to EPC memory bank EPC Data.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReadResultStatus">
            <summary>
            Enum defining the possible status outcomes for the tag read operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReadResultStatus.Success">
            <summary>
            The tag read operation was successful.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReadResultStatus.NonspecificTagError">
            <summary>
            An unidentified tag error occurred.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReadResultStatus.NoResponseFromTag">
            <summary>
            No ACK response was received from the tag in response to the operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReadResultStatus.NonspecificReaderError">
            <summary>
            An unidentified reader error occurred.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TagReadOpResult">
            <summary>
            Specialization of <see cref="T:Impinj.OctaneSdk.TagOpResult"/> class that contains the
            results of an individual tag read operation, as reported in the
            <see cref="T:Impinj.OctaneSdk.TagOpReport"/> parameter of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.TagOpComplete"/> event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReadOpResult.Result">
            <summary>
            The result of the tag read operation.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReadOpResult.Data">
            <summary>
            The data read from the tag.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TagReadOpResult.ReadData">
            <summary/>
        </member>
        <member name="T:Impinj.OctaneSdk.Status">
            <summary>
            Class encapsulating the reader status information, as returned by
            <see cref="M:Impinj.OctaneSdk.ImpinjReader.QueryStatus"/>.
            </summary>
        </member>
        <member name="M:Impinj.OctaneSdk.Status.FromXmlString(System.String)">
            <summary>
            Load reader status information from an XML string.
            </summary>
            <param name="xml">The XML string to parse.</param>
            <returns>A populated reader Status object.</returns>
        </member>
        <member name="M:Impinj.OctaneSdk.Status.Load(System.String)">
            <summary>
            Load reader status information from an XML file.
            </summary>
            <param name="path">The path and filename of the XML file.</param>
            <returns>A populated reader Status object.</returns>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Antennas">
            <summary>
            Collection of antenna status information.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Gpis">
            <summary>
            Collection of GPI port status information.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.AntennaHubs">
            <summary>
            Collection of antenna hub status information.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Gpos">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.IsConnected">
            <summary>
            The reader connection status.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.TemperatureInCelsius">
            <summary>
            Temperature reading from on-board reader temperature sensor, in Celsius.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.TiltSensor">
            <summary>
            Temperature reading from on-board reader temperature sensor, in Celsius.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.IsSingulating">
            <summary>
            The reader inventory status.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.ReaderIdentity">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.OperationState">
            <summary/>
        </member>
        <member name="P:Impinj.OctaneSdk.Status.Connection">
            <summary>
            Obsolete - this has been removed. Use IsConnected instead.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.ReportBufferWarningEvent">
            <summary>
            Class used to encapsulate the details of a
            <see cref="E:Impinj.OctaneSdk.ImpinjReader.ReportBufferWarning"/>
            reader event.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.ReportBufferWarningEvent.PercentFull">
            <summary>
            Parameter defining how full the reader report buffer is in percent.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.GpiStatus">
            <summary>
            Class containing the status information for a general purpose input (GPI) port.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiStatus.State">
            <summary>
            The current input level of the GPI port.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiStatus.PortNumber">
            <summary>
            The GPI port number.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.GpiStatus.IsEnabled">
            <summary/>
        </member>
        <member name="T:Impinj.OctaneSdk.TagBlockPermalockOp">
            <summary>
            Used to perform a block permalock operation.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagBlockPermalockOp.AccessPassword">
            <summary>
            Tag access password.  Required only if an access 
            password has been set for the target memory bank.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TagBlockPermalockOp.BlockMask">
            <summary>
            A mask, which specifies the blocks to permalock.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TransitionZoneRange">
            <summary>
            Enum for defining the xArray transitional zone range.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TransitionZoneRange.Standard">
            <summary>
            Standard transition zone. 
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.TransitionZoneRange.Large">
            <summary>
            Large transition zone.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TransitionConfig">
            <summary>
            Class used to define the transition configuration for an xArray.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.TransitionZones">
            <summary>
            A list of transition zones
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.SectorConfiguration">
            <summary>
            A list of sector configurations
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.InitialStraySearchTimeSec">
            <summary>
            The time to search for strays when the device starts operation (in seconds)
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.StrayUpdateIntervalSec">
            <summary>
            The interval where the device updates its stray information (in seconds)
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.TransitionZoneRange">
            <summary>
            The size of the transition zone. Defaults to Standard
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.TOITagAgeSec">
            <summary>
            The time before TOI (tag of interest) tags are considered gone from the field (in seconds)
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.StrayTagAgeSec">
            <summary>
            The time before stray tags are considered gone from the field (in seconds)
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.TOISession">
            <summary>
            Specifies the session to use for TOI (tag of interest) tags.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.StraySession">
            <summary>
            Specifies the session to use for potential stray tags.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.MountingZoneID">
            <summary>
            Specifies the default zone to assign for tags that are in-between zones.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.TransitionReportEnabled">
            <summary>
            Enables or disables the transition report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.StrayReportEnabled">
            <summary>
            Enables or disables the stray report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.EntryReportEnabled">
            <summary>
            Enables or disables the entry report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TransitionConfig.DiagnosticReportEnabled">
            <summary>
            Enables or disables the diagnostic report.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.TiltSensorValue">
            <summary>
            Holds the X, Y, and Z values returned by the tilt sensor.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TiltSensorValue.XAxis">
            <summary>
            X axis value in degrees returned by the tilt sensor
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.TiltSensorValue.YAxis">
            <summary>
            Y axis value in degrees returned by the tilt sensor
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.LocationConfidenceFactors">
            <summary>
            Contains the confidence factors for a location report.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfidenceFactors.ReadCount">
            <summary>
            The number of reads used to calculate the location.
            </summary>
        </member>
        <member name="P:Impinj.OctaneSdk.LocationConfidenceFactors.Data">
            <summary>
            Additional confidence factors. Internal use only.
            </summary>
        </member>
        <member name="T:Impinj.OctaneSdk.BitPointers">
            <summary>
            Helper class used when defining EPC memory accesses.
            </summary>
        </member>
        <member name="F:Impinj.OctaneSdk.BitPointers.Epc">
            <summary>
            Constant used to point to the first bit of EPC data.
            </summary>
        </member>
    </members>
</doc>
